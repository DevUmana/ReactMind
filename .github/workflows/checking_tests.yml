name: Checking Tests

on:
  pull_request:
    branches:
      - develop
      - staging

jobs:
  test:
    name: Test (Node.js ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Install dependencies
        run: npm install

      - name: Run vitest tests and generate summary
        run: |
          # Run tests and capture the results
          if npm run test-component -- --reporter json --output-file=test-results.json; then
            RESULTS="Passing ‚úÖ"
          else
            RESULTS="Failed ‚ùå"
          fi

          # Ensure the results file exists
          if [ -f test-results.json ]; then
            PASSED=$(jq '.stats.passed' test-results.json)
            FAILED=$(jq '.stats.failed' test-results.json)
            PENDING=$(jq '.stats.pending' test-results.json)
            SKIPPED=$(jq '.stats.skipped' test-results.json)
            DURATION=$(jq '.stats.duration' test-results.json)
          else
            PASSED=0
            FAILED=0
            PENDING=0
            SKIPPED=0
            DURATION=0
            RESULTS="Error ‚ùå - No results file generated"
          fi

          # Write summary as a Markdown table
          echo "| Results | Passed ‚úÖ | Failed ‚ùå | Pending ‚úã | Skipped ‚Ü© | Duration üïó |" > $GITHUB_STEP_SUMMARY
          echo "|---------|-----------|----------|-----------|-----------|-------------|" >> $GITHUB_STEP_SUMMARY
          echo "| $RESULTS | $PASSED | $FAILED | $PENDING | $SKIPPED | ${DURATION}ms |" >> $GITHUB_STEP_SUMMARY

          # Exit with the appropriate status
          if [ "$RESULTS" = "Failed ‚ùå" ]; then
            exit 1
          fi

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.node-version }}
          path: test-results.json
