name: Checking Tests

on:
  pull_request:
    branches:
      - develop
      - staging

jobs:
  test:
    name: Test (Node.js ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Install dependencies
        run: npm install

      - name: Run Cypress tests and generate report
        run: |
          OUTPUT_FILE="test-results-${{ matrix.node-version }}.json"

          # Run Cypress tests
          if npx cypress run --component --reporter json --reporter-options "output=$OUTPUT_FILE"; then
            RESULTS="Passing ‚úÖ"
          else
            RESULTS="Failed ‚ùå"
          fi

          # Verify if the results file exists
          if [ -f "$OUTPUT_FILE" ]; then
            PASSED=$(jq '.stats.passed' "$OUTPUT_FILE" || echo 0)
            FAILED=$(jq '.stats.failed' "$OUTPUT_FILE" || echo 0)
            PENDING=$(jq '.stats.pending' "$OUTPUT_FILE" || echo 0)
            SKIPPED=$(jq '.stats.skipped' "$OUTPUT_FILE" || echo 0)
            DURATION=$(jq '.stats.duration' "$OUTPUT_FILE" || echo 0)
          else
            PASSED=0
            FAILED=0
            PENDING=0
            SKIPPED=0
            DURATION=0
            RESULTS="Error ‚ùå - No results file generated"
          fi

          # Write summary to GitHub Actions summary
          echo "| Results | Passed ‚úÖ | Failed ‚ùå | Pending ‚úã | Skipped ‚Ü© | Duration üïó |" > $GITHUB_STEP_SUMMARY
          echo "|---------|-----------|----------|-----------|-----------|-------------|" >> $GITHUB_STEP_SUMMARY
          echo "| $RESULTS | $PASSED | $FAILED | $PENDING | $SKIPPED | ${DURATION}ms |" >> $GITHUB_STEP_SUMMARY

          # Print debug information
          ls -l $OUTPUT_FILE || echo "$OUTPUT_FILE not found"

          # Exit with appropriate status
          if [ "$RESULTS" = "Failed ‚ùå" ]; then
            exit 1
          fi

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.node-version }}
          path: test-results-${{ matrix.node-version }}.json
          if-no-files-found: warn
